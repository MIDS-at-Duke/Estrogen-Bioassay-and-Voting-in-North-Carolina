hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Age")+
ylab("Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))+
facet_wrap(~ethnic_code)
ethnicwise_age_plot <- ggplot(dt3, aes(x=ethnic_code))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Ethnic group wise Voter-Turnout for Age groups") +
geom_text(data=dt3,
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Ehnic Code")+
ylab("Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))+
facet_wrap(~age)
ggarrange(agewise_ethnic_plot,ethnicwise_age_plot, ncol = 2)
#############################################################################################
# EDA Complete Moving into Modeling
# Use voting_stats_dataset
colnames(voting_stats_dataset)
# [1] "county_desc"    "precinct_abbrv" "vtd_abbrv"      "party_cd"       "age"
# [6] "race_code"      "ethnic_code"    "sex_code"       "total_voters"   "voted_voters"
# All factors included, with varying effects by county.
Model_1 <- glmer(cbind(total_voters, voted_voters) ~ (1|county_desc) +
race_code + ethnic_code + age + party_cd + sex_code,
data = voting_stats_dataset, family = binomial)
summary(Model_1)
Model_2 <- glmer(cbind(total_voters, voted_voters) ~ (1|county_desc) +
race_code + ethnic_code + age + party_cd + sex_code,
data = voting_stats_dataset, family = binomial)
summary(Model_1)
ggplot(dt)+
geom_bar(aes(x=County, y=NbrOfObs), stat = 'identity')+
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1, size = 3))
BIC_backward <- step(Model_1, scope = formula(full_model), trace = 0, direction = 'backward')
BIC_backward <- step(Model_1, scope = formula(full_model), trace = 0, direction = 'backward')
summary(Model_1)
BIC_backward <- step(Model_1, scope = formula(full_model), trace = 0, direction = 'backward')
BIC_backward <- step(Model_1, scope = formula(full_model), trace = 0, direction = 'backward')
BIC_backward$call
BIC_backward <- step(Model_1, scope = full_model, trace = 0, direction = 'backward')
?step
library(MASS)
BIC_backward <- step(Model_1, scope = full_model, trace = 0, direction = 'backward')
# All factors included, with varying effects by county.
model_full <- glmer(cbind(total_voters, voted_voters) ~ (1|county_desc) +
race_code + ethnic_code + age + party_cd + sex_code,
data = voting_stats_dataset, family = binomial)
model_base <- glmer(cbind(total_voters, voted_voters) ~ 1, data=voting_stats_dataset,
family = binomial)
model_base <- glmer(cbind(total_voters, voted_voters) ~ (1|county_desc), data=voting_stats_dataset,
family = binomial)
model_stepwise_aic = step(model_base,
scope = list(upper = model_full,
lower = model_base),
direction = 'both',
trace=0,
k = 2)
summary(model_full)
# DO NOT ALTER CODE IN THIS CHUNK
# The very first time you use this R markdown file, you should install each of the packages below.
# The same goes for other packages you might decide to use
# Remember that you only need to install each R package once in R (ever -- unless you change computers).
# All you need to do whenever you need to use the package again (after restarting the R session),
# is to use the library function to call the package.
# For example, type install.packages("knitr") in the console to install the knitr package.
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(MASS)
#Reading file with data for all the voters
all_voter = read.csv("C:\\Users\\derek\\Desktop\\MIDS 1st Semester\\Modeling and Representing Data\\Team Projects\\Project Two\\team-project-2-estrogen-bioassay-and-voting-in-nc-avengers\\Data\\voter_stats_20161108.txt",
header = TRUE, comment.char = "",sep='', stringsAsFactors = F)
#All voters -  514,846 Observations  (Actual number of rows in file)
#Getting unique rows from all_voters
all_voter = unique(all_voter)
#All voters -  461,833 Observations
#Reading file with data for the voters who actually voted
voted_voter = read.delim("C:\\Users\\derek\\Desktop\\MIDS 1st Semester\\Modeling and Representing Data\\Team Projects\\Project Two\\team-project-2-estrogen-bioassay-and-voting-in-nc-avengers\\Data\\history_stats_20161108.txt")
#Voted voters - 734,126 Observations    (Actual number of rows in file)
#all unique rows in Voted_voters already
#renaming total_voter column in Voted_voters dataframe
colnames(voted_voter)[9] <- "voted_voters" # I recommend changing to voters and total voters to
# Registered Voters
#Changing datatype of votes to numeric in both the dataframes
all_voter$total_voters = as.numeric(all_voter$total_voters)
voted_voter$voted_voters = as.numeric(as.character(voted_voter$voted_voters))
#Calculating total voting percentage
Num_all_voters <- sum(all_voter$total_voters, na.rm = T)  #6,213,883  (Total voters)
Num_of_voted_voters <- sum(voted_voter$voted_voters)      #4,768,079  (Voters who voted)
Percent_Voted = (Num_of_voted_voters*100)/Num_all_voters  #76.73 % Voters Voted
#Removing unwanted columns (DATES & constant value stats_type columns)
all_voter$election_date <- NULL
voted_voter$election_date <- NULL
voted_voter$update_date <- NULL
all_voter$stats_type <- NULL
voted_voter$stats_type <- NULL
#Removing Rows with empty data
#inital count of rows |  all_voter - 461,833, voted_voter - 734,126
all_v_noNA <- all_voter %>%
na_if("") %>%
na.omit()
#deleted 1026 rows with missing values (0.2%)
voted_v_noNA <- voted_voter %>%
na_if("") %>%
na.omit()
#deleted 30,024 rows with missing values (4.0%)
#new count of rows  |   all_voter - 460,807, voted_voter  - 704,102
Num_all_voters <- sum(all_v_noNA$total_voters, na.rm = T)  #6,210,364  (Total voters)
Num_of_voted_voters <- sum(voted_v_noNA$voted_voters)      #4,572,359  (Voters who voted)
Percent_Voted = (Num_of_voted_voters*100)/Num_all_voters   #73.62 % Voters Voted
#merging the two dataframes
votedDataMerged = voted_v_noNA %>%
inner_join (all_v_noNA,
by = c("county_desc" , "precinct_abbrv", "vtd_abbrv",
"party_cd", "race_code","ethnic_code","sex_code",
"age"))
#nrows in votedDataMerged 626,544
#removing noNA dataframes (not required anymore)
rm(voted_v_noNA,all_v_noNA)
#dropping voting_method column (same as voting_method_desc)
votedDataMerged$voting_method <- NULL
# What's this?
str(votedDataMerged)
votedDataMerged$county_desc = as.factor(votedDataMerged$county_desc)
votedDataMerged$precinct_abbrv = as.factor(votedDataMerged$precinct_abbrv)
votedDataMerged$vtd_abbrv = as.factor(votedDataMerged$vtd_abbrv)
votedDataMerged$age = as.factor(votedDataMerged$age)
votedDataMerged$party_cd = as.factor(votedDataMerged$party_cd)
votedDataMerged$race_code = as.factor(votedDataMerged$race_code)
votedDataMerged$ethnic_code = as.factor(votedDataMerged$ethnic_code)
votedDataMerged$sex_code = as.factor(votedDataMerged$sex_code)
# changing already factored variable to character and then again to factor (removing any extra factor)
votedDataMerged$voting_method_desc = as.character(votedDataMerged$voting_method_desc)
votedDataMerged$voting_method_desc = as.factor(votedDataMerged$voting_method_desc)
votedDataMerged$voted_party_cd = as.character(votedDataMerged$voted_party_cd)
votedDataMerged$voted_party_cd = as.factor(votedDataMerged$voted_party_cd)
nrow(unique(votedDataMerged[,c("county_desc" , "precinct_abbrv", "vtd_abbrv",
"party_cd", "race_code","ethnic_code","sex_code",
"age","voted_voters","voting_method_desc","voted_party_cd")]))
# Creating a new dataframe to get Overall Voting stats
# Since the same number of total_voter was appearing for different voted_voters in votedDataMerged
# (which differed by voting method and voted_party code), a new dataframe has to be created
# (Akshay explained) this to me.
voterStatDf <- aggregate(votedDataMerged$voted_voters,
by=list(votedDataMerged$county_desc , votedDataMerged$precinct_abbrv,
votedDataMerged$vtd_abbrv,votedDataMerged$party_cd, votedDataMerged$age,
votedDataMerged$race_code,votedDataMerged$ethnic_code,votedDataMerged$sex_code,
votedDataMerged$total_voters), sum)
colnames(voterStatDf) <- c("county_desc", "precinct_abbrv", "vtd_abbrv" ,"party_cd",
"age", "race_code", "ethnic_code", "sex_code",  "total_voters",
"voted_voters")
#Calculating total voting percentage after merging
Num_all_voters <- sum(voterStatDf$total_voters)             #6,070,763 (Total voters)
Num_of_voted_voters <- sum(voterStatDf$voted_voters)        #4,097,895  (Voters who voted)
Percent_Voted = (Num_of_voted_voters*100)/Num_all_voters    #67.52% Voters Voted
#Checking number & percentage of observations which has more Voted votes than total voters
## in Voter stats dataframe (Anomaly more people voted than registered voters)
nrow(voterStatDf[voterStatDf$voted_voters > voterStatDf$total_voters,  ]) # 3023 (0.84%)
## in voter data merged dataframe
nrow(votedDataMerged[votedDataMerged$voted_voters > votedDataMerged$total_voters,  ]) # 622 (0.1%)
#counting and plotting number of observations for each county
dt = aggregate(voterStatDf$county_desc, list(voterStatDf$county_desc), length)
colnames(dt) = c('County','NbrOfObs')
ggplot(dt)+
geom_bar(aes(x=County, y=NbrOfObs), stat = 'identity')+
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1, size = 3))
#counting and plotting number of total voters and voted voters for each county
dt = aggregate(voterStatDf$total_voters, list(voterStatDf$county_desc), sum)
colnames(dt) = c('County','NbrOfTotalVoters')
dt2 = aggregate(voterStatDf$voted_voters, list(voterStatDf$county_desc), sum)
colnames(dt2) = c('County','NbrOfVotedVoters')
dt3 = merge(dt, dt2, by = "County")
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
ggplot(dt3, aes(x=County))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.4)+
ggtitle("Distribution of Total Voter and Voted voters for 20 Counties") +
geom_text(data=dt3,aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
vjust = 0.6, hjust= -0.2, angle=90, size=2.5) +
xlab("Counties")+
ylab("Voter Count") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1,size=2))
#############################################################################################
#Selecting 20 counties at rondom
set.seed(98)
counties = sample(as.character(unique(votedDataMerged$county_desc)), size = 20,replace = T)
#Couting number of observations of 20 selected counties
print(counties)
# [1] "BERTIE"     "CALDWELL"   "FRANKLIN"   "DARE"
# [5] "HARNETT"    "JONES"      "CHATHAM"    "SWAIN"
# [9] "PAMLICO"    "BUNCOMBE"   "CHEROKEE"   "MCDOWELL"
# [13] "STOKES"     "PITT"       "NASH"       "SURRY"
# [17] "WARREN"     "TYRRELL"    "LENOIR"     "CUMBERLAND"
#colnames(voting_dataset) - 12 columns
# county_desc   |
# precinct_abbrv| vtd_abbrv |
# race_code     | sex_code  | age | ethnic_code
# total_voters  |  party_cd
# voting_method_desc | voted_voters | voted_party_cd
#Subsetting data for 20 counties from merged and stats table
voting_dataset = subset(votedDataMerged, county_desc %in% counties)
voting_stats_dataset = subset(voterStatDf, county_desc %in% counties)
#Calculating total voting percentage after sampling (makes sense)
Num_all_voters <- sum(voting_stats_dataset$total_voters)        #947,012 (Total voters)
Num_of_voted_voters <- sum(voting_stats_dataset$voted_voters)   #648,649  (Voters who voted)
Percent_Voted = (Num_of_voted_voters*100)/Num_all_voters        #68.49% Voters Voted
#Counting and Plotting the number of observations for 20 couties
dt = aggregate(voting_stats_dataset$county_desc, list(voting_stats_dataset$county_desc), length)
colnames(dt) = c('County','NbrOfObs')
ggplot(dt,aes(x=County, y=NbrOfObs),label=NbrOfObs)+
geom_bar(stat='identity',fill='Blue2', width = 0.4)+
ylim(0,15500)+
geom_text(aes(label= scales::comma(NbrOfObs)),hjust=0.5,vjust=-0.8,size=3)+
ggtitle("Number of Observations for 20 Counties") +
theme( plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
#Checking number observations where party has changed
nrow(voting_dataset[voting_dataset$party_cd != voting_dataset$voted_party_cd,]) #868 (0.8%)
# Since only 0.8% observations have different partycd and voted_party_cd.
# Dropping party_cd column
voting_dataset$party_cd <- NULL
# Plotting some EDA
#############################################################################################
## Calculating County-wise total and voted voters per county along with %voted
dt = aggregate(c(voting_stats_dataset$total_voters), list(voting_stats_dataset$county_desc), sum)
colnames(dt) = c('County','NbrOfTotalVoters')
dt2 = aggregate(c(voting_stats_dataset$voted_voters), list(voting_stats_dataset$county_desc), sum)
colnames(dt2) = c('County','NbrOfVotedVoters')
dt3 = merge(dt, dt2, by = "County")
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
## Plotting number of total voters and count of voters who voted
ggplot(dt3, aes(x=County))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.4)+
ggtitle("Distribution of Total Voter and Voted voters for 20 Counties") +
geom_text(data=dt3,aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
vjust = 0.6, hjust= -0.2, angle=90, size=2.5 ) +
ylim(0,200000)+
xlab("Counties")+
ylab("Voter Count") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
#############################################################################################
# Gender wise voter turnout
## Calculating Gender-wise total and voted voters per county along with %voted
dt = aggregate(c(voting_stats_dataset$total_voters),
list(voting_stats_dataset$sex_code), sum)
colnames(dt) = c('sex_code','NbrOfTotalVoters')
dt2 = aggregate(c(voting_stats_dataset$voted_voters),
list(voting_stats_dataset$sex_code), sum)
colnames(dt2) = c('sex_code','NbrOfVotedVoters')
dt3 = merge(dt, dt2, by = "sex_code")
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
## Plotting number of total voters and count of voters who voted
ggplot(dt3, aes(x=sex_code))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Gender-wise Voter Turnout") +
geom_text(data=dt3,aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
vjust = -0.4, hjust= 0.4, angle=0, size=3 ) +
xlab("Gender")+
ylab("Voter Count") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
#############################################################################################
## Plotting Voter turnout based on county and gender
# Calculating total and voted voters per county along with %voted
dt = aggregate(c(voting_stats_dataset$total_voters),
list(voting_stats_dataset$county_desc,voting_stats_dataset$sex_code), sum)
colnames(dt) = c('County',"Sex_code",'NbrOfTotalVoters')
dt2 = aggregate(c(voting_stats_dataset$voted_voters),
list(voting_stats_dataset$county_desc,voting_stats_dataset$sex_code), sum)
colnames(dt2) = c('County',"Sex_code", "NbrOfVotedVoters")
dt3 = merge(dt, dt2, by.x = c("County","Sex_code"), by.y=c("County","Sex_code"))
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
## plotting number of total voters and count of voters who voted
## County Wise
ggplot(dt3, aes(x=County))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2')+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2')+
ggtitle("County-wise Voter Turnout") +
geom_text(data=dt3,aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = -0.1, vjust = 0.5, angle=90, size=3) +
ylim(0,105000)+
xlab("Counties")+
ylab("Voter Count") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))+
facet_wrap(~Sex_code)
## Gender Wise
ggplot(dt3, aes(x=Sex_code))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.6)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.4)+
ggtitle("Gender-wise voter Turnout") +
geom_text(data=dt3,aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
ylim(0,105000)+
xlab("Counties")+
ylab("Voter Count") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))+
facet_wrap(~County)
### Based on the analysis, it seems for each county, the number of males and females who voted
### were comparable (+/- 2%)
#############################################################################################
#Calculating and plotting Party wise voter turnout according to Gender
## Calculating. Making dataframe for new values and groups
dt = aggregate(c(voting_stats_dataset$total_voters),
list(voting_stats_dataset$party_cd,voting_stats_dataset$sex_code), sum)
colnames(dt) = c('party_cd',"Sex_code",'NbrOfTotalVoters')
dt2 = aggregate(c(voting_stats_dataset$voted_voters),
list(voting_stats_dataset$party_cd,voting_stats_dataset$sex_code), sum)
colnames(dt2) = c('party_cd',"Sex_code", "NbrOfVotedVoters")
dt3 = merge(dt, dt2, by = c("party_cd","Sex_code"))
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
## Plotting
female_party_plot <- ggplot(dt3[dt3$Sex_code=="F",], aes(x=party_cd))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Party-wise Voter-Turnout (Female)") +
geom_text(data=dt3[dt3$Sex_code=="F",],
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Party Code")+
ylab("Female Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
male_party_plot <- ggplot(dt3[dt3$Sex_code=="M",], aes(x=party_cd))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Party-wise Voter-Turnout (Male)") +
geom_text(data=dt3[dt3$Sex_code=="M",],
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Party Code")+
ylab("Male Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
ggarrange(male_party_plot,female_party_plot, ncol = 2)
#############################################################################################
#Calculating and plotting Age wise voter turnout according to Gender
dt = aggregate(c(voting_stats_dataset$total_voters),
list(voting_stats_dataset$age,voting_stats_dataset$sex_code), sum)
colnames(dt) = c('age',"Sex_code",'NbrOfTotalVoters')
dt2 = aggregate(c(voting_stats_dataset$voted_voters),
list(voting_stats_dataset$age,voting_stats_dataset$sex_code), sum)
colnames(dt2) = c('age',"Sex_code", "NbrOfVotedVoters")
dt3 = merge(dt, dt2, by = c("age","Sex_code"))
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
female_age_plot <- ggplot(dt3[dt3$Sex_code=="F",], aes(x=age))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Age wise Voter-Turnout (Female)") +
geom_text(data=dt3[dt3$Sex_code=="F",],
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Age Groups")+
ylab("Female Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
male_age_plot <- ggplot(dt3[dt3$Sex_code=="M",], aes(x=age))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Age wise Voter-Turnout (Male)") +
geom_text(data=dt3[dt3$Sex_code=="M",],
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Age Groups")+
ylab("Male Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
ggarrange(female_age_plot,male_age_plot, ncol = 2)
#############################################################################################
#Calculating and plotting Race wise voter turnout according to Gender
dt = aggregate(c(voting_stats_dataset$total_voters),
list(voting_stats_dataset$race,voting_stats_dataset$sex_code), sum)
colnames(dt) = c('race',"Sex_code",'NbrOfTotalVoters')
dt2 = aggregate(c(voting_stats_dataset$voted_voters),
list(voting_stats_dataset$race,voting_stats_dataset$sex_code), sum)
colnames(dt2) = c('race',"Sex_code", "NbrOfVotedVoters")
dt3 = merge(dt, dt2, by = c("race","Sex_code"))
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
female_race_plot <- ggplot(dt3[dt3$Sex_code=="F",], aes(x=race))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Race wise Voter-Turnout (Female)") +
geom_text(data=dt3[dt3$Sex_code=="F",],
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Race")+
ylab("Female Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
male_race_plot <- ggplot(dt3[dt3$Sex_code=="M",], aes(x=race))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Race wise Voter-Turnout (Male)") +
geom_text(data=dt3[dt3$Sex_code=="M",],
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Race")+
ylab("Male Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
ggarrange(female_race_plot,male_race_plot, ncol = 2)
#############################################################################################
#Calculating and plotting Race wise voter turnout according to Ethinic Group
dt = aggregate(c(voting_stats_dataset$total_voters),
list(voting_stats_dataset$ethnic_code,voting_stats_dataset$sex_code), sum)
colnames(dt) = c('ethnic_code',"Sex_code",'NbrOfTotalVoters')
dt2 = aggregate(c(voting_stats_dataset$voted_voters),
list(voting_stats_dataset$ethnic_code,voting_stats_dataset$sex_code), sum)
colnames(dt2) = c('ethnic_code',"Sex_code", "NbrOfVotedVoters")
dt3 = merge(dt, dt2, by = c("ethnic_code","Sex_code"))
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
female_ethnic_plot <- ggplot(dt3[dt3$Sex_code=="F",], aes(x=ethnic_code))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Ethnic-code wise Voter-Turnout (Female)") +
geom_text(data=dt3[dt3$Sex_code=="F",],
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Ethnic-code")+
ylab("Female Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
male_ethnic_plot <- ggplot(dt3[dt3$Sex_code=="M",], aes(x=ethnic_code))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Ethnic-code wise Voter-Turnout (Male)") +
geom_text(data=dt3[dt3$Sex_code=="M",],
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Ethnic-code")+
ylab("Male Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))
ggarrange(female_ethnic_plot,male_ethnic_plot, ncol = 2)
#############################################################################################
#Calculating and plotting Age-wise wise voter turnout according to Ethinic Group
dt = aggregate(c(voting_stats_dataset$total_voters),
list(voting_stats_dataset$ethnic_code,voting_stats_dataset$age), sum)
colnames(dt) = c('ethnic_code',"age",'NbrOfTotalVoters')
dt2 = aggregate(c(voting_stats_dataset$voted_voters),
list(voting_stats_dataset$ethnic_code,voting_stats_dataset$age), sum)
colnames(dt2) = c('ethnic_code',"age", "NbrOfVotedVoters")
dt3 = merge(dt, dt2, by = c("ethnic_code","age"))
dt3 = mutate(dt3, percentVoted = round((NbrOfVotedVoters/NbrOfTotalVoters),2))
agewise_ethnic_plot <- ggplot(dt3, aes(x=age))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Age-wise Voter-Turnout for Ethnic groups") +
geom_text(data=dt3,
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Age")+
ylab("Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))+
facet_wrap(~ethnic_code)
ethnicwise_age_plot <- ggplot(dt3, aes(x=ethnic_code))+
geom_bar(aes(y=NbrOfTotalVoters), stat = 'identity', fill='Blue2', width = 0.4)+
geom_bar(aes(y=NbrOfVotedVoters), stat = 'identity', fill='Orange2', width = 0.2)+
ggtitle("Ethnic group wise Voter-Turnout for Age groups") +
geom_text(data=dt3,
aes(y=NbrOfTotalVoters,label=scales::percent(percentVoted)),
hjust = 0.5, vjust = -0.5, angle=0, size=3) +
xlab("Ehnic Code")+
ylab("Voters") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1))+
facet_wrap(~age)
ggarrange(agewise_ethnic_plot,ethnicwise_age_plot, ncol = 2)
#############################################################################################
# EDA Complete Moving into Modeling
# Use voting_stats_dataset
colnames(voting_stats_dataset)
# [1] "county_desc"    "precinct_abbrv" "vtd_abbrv"      "party_cd"       "age"
# [6] "race_code"      "ethnic_code"    "sex_code"       "total_voters"   "voted_voters"
# All factors included, with varying effects by county.
model_full <- glmer(cbind(total_voters, voted_voters) ~ (1|county_desc) +
race_code + ethnic_code + age + party_cd + sex_code,
data = voting_stats_dataset, family = binomial)
summary(model_full)
